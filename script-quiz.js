const quizData = [
    {
        question: "ltv — что это такое?",
        a: "ключевая бизнес-метрика, означает показатель прибыли, которую компания получает за все время взаимодействия с конкретным покупателем",
        b: "показатель прибыли, которую клиент получает за все время взаимодействия с конкретной компанией",
        c: "маркетинговая метрика, означающая прибыль с рекламы",
        d: "что-то на иностранном",
        correct: "a",
    },
    {
        question: "в каких случаях применяется jtbd-подход",
        a: "чтобы спроектировать дизайн продукта",
        b: "чтобы сэкономить время на разработке продукта",
        c: "чтобы правильно определить пользовательские боли и потребности",
        d: "чтобы показать это на собеседовании нанимающему менеджеру",
        correct: "c",
    },
    {
        question: "для чего считают юнит-экономику?",
        a: "чтобы рассчитать финансовые показатели для каждой единицы товара или услуги и определить, при каких условиях торговля будет прибыльной",
        b: "чтобы показать экономику будущего продукта инвесторам",
        c: "чтобы рассчитать показатели и в соответствии с ними разрабатывать нужный функционал",
        d: "никогда не интересовался этим и не буду",
        correct: "a",
    }
];

const quiz = document.getElementById('quiz')
const answerEls = document.querySelectorAll('.answer')
const questionEl = document.getElementById('question')
const a_text = document.getElementById('a_text')
const b_text = document.getElementById('b_text')
const c_text = document.getElementById('c_text')
const d_text = document.getElementById('d_text')
const e_text = document.getElementById('e_text')
const submitBtn = document.getElementById('submit')

let currentQuiz = 0
let score = 0

loadQuiz()

function loadQuiz() {
    deselectAnswers()

    const currentQuizData = quizData[currentQuiz]

    questionEl.innerText = currentQuizData.question
    a_text.innerText = currentQuizData.a
    b_text.innerText = currentQuizData.b
    c_text.innerText = currentQuizData.c
    d_text.innerText = currentQuizData.d
    

}

function deselectAnswers() {
    answerEls.forEach(answerEl => answerEl.checked = false)
}

function getSelected() {
    let answer

    answerEls.forEach(answerEl => {
        if(answerEl.checked) {
            answer = answerEl.id
        }
    })

    return answer
}

submitBtn.addEventListener('click', () => {
    const answer = getSelected()
    
    if(answer) {
        if(answer === quizData[currentQuiz].correct) {
            score++
        }

        currentQuiz++

        if(currentQuiz < quizData.length) {
            loadQuiz()
        } else {
            quiz.innerHTML = `

            <svg class="img" width="253" height="245" viewBox="0 0 253 245" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M47.7813 197.571C53.2667 198.136 58.6988 196.933 63.6851 194.846C65.2018 199.03 64.5534 213.278 64.0393 219.881C79.4192 229.66 97.1883 221.74 104.15 216.558C93.8971 191.4 92.4414 130.442 92.9952 103.108L49.5614 75.3391L14.1973 89.461C13.1292 91.2015 10.7795 101.779 9.9251 130.165C8.85705 165.648 28.2005 195.553 47.7813 197.571Z" fill="white"/>
            <path d="M84.3322 179.77C78.6755 186.376 63.446 199.185 47.7813 197.571C28.2005 195.553 8.85705 165.648 9.9251 130.165C10.7795 101.779 13.1292 91.2015 14.1973 89.461L49.5614 75.3391L92.9952 103.108C92.4414 130.442 93.8971 191.4 104.15 216.558C97.1883 221.74 79.4192 229.66 64.0393 219.881C64.5536 213.275 65.2023 199.019 63.6833 194.841" stroke="#222222" stroke-width="3" stroke-linejoin="round"/>
            <path d="M32.5493 240.649C32.5493 221.186 64.116 230.823 64.116 219.525C65.7378 221.859 74.0844 225.103 83.9341 224.272C95.9578 223.258 102.368 217.943 103.99 216.202C104.82 217.864 104.939 218.22 105.651 219.762" stroke="#222222" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M7.20241 112.653C7.18904 112.654 7.17569 112.654 7.16233 112.655C6.00653 112.707 4.43121 112.795 3.27649 113.933C2.13439 115.058 1.74366 116.848 1.69514 119.226C1.6843 119.757 1.65398 120.358 1.6195 121.041C1.60859 121.257 1.59727 121.482 1.58601 121.715C1.54 122.668 1.49726 123.731 1.50014 124.845C1.50587 127.062 1.69106 129.556 2.43206 131.902C3.17921 134.266 4.50744 136.525 6.81372 138.167C9.11339 139.805 12.2343 140.724 16.3729 140.693H22.0636C26.3175 140.693 33.2189 137.478 35.2117 126.517C35.3511 125.751 35.5894 125.484 35.667 125.419C35.709 125.384 35.7238 125.378 35.7856 125.393C35.884 125.417 36.0661 125.511 36.2339 125.738C36.3938 125.955 36.5081 126.252 36.5081 126.605C36.5081 126.636 36.5091 126.667 36.5109 126.697C36.7524 130.622 37.5146 134.761 40.0958 137.796C42.7551 140.923 47.053 142.56 53.6085 142.114C53.6102 142.114 53.6119 142.114 53.6136 142.114L61.2726 141.642C63.9251 141.634 67.8551 140.897 71.1654 138.655C74.2371 136.575 76.7134 133.232 77.1391 128.214L90.564 130.116C90.9905 130.177 91.4225 130.051 91.7498 129.771C92.0771 129.491 92.2682 129.083 92.2743 128.653L92.393 120.346C92.4036 119.601 91.8661 118.961 91.1306 118.843L76.8229 116.55C76.7345 115.82 76.5144 115.021 76.0759 114.29C75.2368 112.89 73.7099 111.938 71.4665 112.062C68.1068 112.249 44.6962 112.218 33.3427 112.179C33.3318 112.179 33.321 112.179 33.3102 112.179L7.20241 112.653Z" fill="#0057FF" stroke="#222222" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M35.0423 152.716C31.4527 152.716 27.8632 150.722 25.736 147.797C25.6031 147.531 25.2038 146.999 25.3368 146.468C25.4697 145.936 25.7356 145.537 26.0015 145.404C30.3888 141.283 34.5105 136.098 35.7071 126.392" stroke="#222222" stroke-width="3" stroke-linecap="round"/>
            <path d="M33.8185 159.229C31.9573 159.761 29.8303 163.218 25.3101 164.149C26.6395 167.339 30.8937 170.397 35.8127 171.062C41.1306 171.727 48.5755 169.333 50.9686 164.547C44.4542 164.68 42.4602 160.027 39.9342 159.496C38.073 159.097 36.8761 161.623 36.8761 161.623C36.8761 161.623 35.6798 158.698 33.8185 159.229Z" fill="#222222"/>
            <path d="M44.1642 61.9297C5.71459 70.664 4.48832 93.6546 8.68138 104.058C14.1487 94.9769 22.7743 92.1667 26.6784 91.8534C33.0317 108.08 54.9119 124.579 80.359 123.283C99.0056 122.333 110.359 106.985 108.381 96.2253C104.623 82.3012 82.6138 53.1955 44.1642 61.9297Z" fill="white"/>
            <path d="M24.9394 84.9519C26.8381 102.99 51.2677 124.765 80.359 123.283C99.0056 122.333 110.359 106.985 108.381 96.2253C104.623 82.3012 82.6138 53.1955 44.1642 61.9297C5.71459 70.664 4.48832 93.6546 8.68138 104.058C14.2827 94.7544 23.1989 92.0327 26.9568 91.8349" stroke="#222222" stroke-width="3" stroke-linejoin="round"/>
            <path d="M55.5717 67.6254C51.4182 68.021 42.1143 70.4023 38.127 76.7631" stroke="#222222" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M54.741 103.879C57.1603 107.279 63.8746 114.145 71.3769 114.418" stroke="#222222" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M62.6664 101.87C64.5333 104.493 69.7143 109.792 75.5034 110.003" stroke="#222222" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M81.9171 102.831C81.6323 82.1351 91.6086 55.2837 96.395 43.4956L165.106 34.9513L208.658 84.0813L194.062 126.803L183.381 119.683L192.163 214.62C182.392 219.802 157.867 226.986 137.93 214.264L139.123 191.598C131.212 194.367 112.517 195.656 101.029 178.663C86.6702 157.42 82.2731 128.702 81.9171 102.831Z" fill="white"/>
            <path d="M139.123 191.598C131.212 194.367 112.517 195.656 101.029 178.663C86.6702 157.42 82.2731 128.702 81.9171 102.831C81.6323 82.1351 91.6086 55.2837 96.395 43.4956L165.106 34.9513L208.658 84.0813L194.062 126.803L183.381 119.683L192.163 214.62C182.392 219.802 157.867 226.986 137.93 214.264L139.123 191.598ZM139.123 191.598C143.87 189.976 154.361 184.572 158.348 175.933" stroke="#222222" stroke-width="3" stroke-linejoin="round"/>
            <path d="M115.263 154.034C120.315 154.034 134.275 152.04 140.125 145.259" stroke="#222222" stroke-width="3" stroke-linecap="round"/>
            <path d="M140.716 138.478C144.173 139.808 146.566 143.264 146.699 147.12" stroke="#222222" stroke-width="3" stroke-linecap="round"/>
            <path d="M151.267 201.231C150.336 202.693 150.203 204.688 150.602 206.549C151.134 208.41 152.33 210.006 153.793 210.803" stroke="#222222" stroke-width="3" stroke-linecap="round"/>
            <path d="M163.385 83.0135L178.931 85.5056L179.643 77.0797L168.251 74.5876C159.944 73.0844 141.953 69.7221 136.447 68.298C130.941 66.8739 113.187 66.3597 104.999 66.2806C99.105 66.4388 85.8929 66.8739 80.1966 67.3486C74.5004 67.8233 72.6016 71.5812 72.3643 73.4009C71.9292 75.8139 71.1301 81.5892 71.4149 85.3867C71.7709 90.1336 77.1353 100.155 89.037 98.9153C100.43 97.7285 104.939 91.3597 104.939 91.3597C104.939 91.3597 106.827 77.8391 109.39 87.048C111.953 96.2569 121.672 103.187 134.844 101.882C146.184 100.758 150.509 96.5418 151.874 91.3205C154.438 82.5862 160.616 82.1432 163.385 83.0135Z" fill="#0057FF" stroke="#222222" stroke-width="3"/>
            <path d="M183.471 119.671L186.201 155.391C187.743 154.368 194.65 147.359 209.935 127.517C229.041 102.715 218.123 68.6564 213.258 59.8747C208.392 51.093 193.761 35.7609 176.588 27.24C165.343 21.6601 154.658 2.29523 151.43 2.20029C148.202 2.10536 145.971 8.96458 145.259 12.4061V12.407C145.259 12.407 134.68 -0.837705 131.284 2.55633C127.605 6.23276 125.825 9.4369 127.696 15.1216C122.949 10.7448 115.62 0.0642065 112.743 2.5424C109.103 5.67827 108.855 12.3641 109.093 15.1331C102.922 10.6711 100.203 8.0804 99.8078 7.64528C95.3267 9.32059 93.1906 15.2542 95.1796 19.9871C92.8853 18.484 87.3236 15.0979 83.4311 13.5789C79.5387 12.0599 77.7633 21.8974 85.9516 34.5953C93.151 45.7596 112.071 50.7627 119.745 53.2153C128.012 54.758 147.181 58.6742 157.72 61.997C168.258 65.3198 172.712 75.4859 173.622 80.1537C173.898 83.2392 173.788 91.2851 171.129 98.7851C168.471 106.285 171.05 108.793 172.672 109.11C173.78 109.822 176.636 109.869 179.199 104.363C182.403 97.4799 195.457 81.2218 199.017 97.9545C201.865 111.341 189.84 118.01 183.471 119.671Z" fill="#222222" stroke="#222222" stroke-width="3"/>
            <path d="M106.125 80.9958C104.82 94.5244 99.9544 113.512 92.0034 123.006C92.3594 125.379 98.2455 130.221 106.6 129.177" stroke="#222222" stroke-width="3" stroke-linejoin="round"/>
            <path d="M251.26 232.539C246.395 222.215 227.051 199.43 192.637 214.62C165.105 226.772 144.772 219.604 138.048 214.501C124.123 211.732 94.6133 213.591 94.6138 245" stroke="#222222" stroke-width="3" stroke-linejoin="round"/>
            <path d="M85.1206 88.8611C87.3807 87.3987 90.3058 85.1389 91.3694 83.8094C90.7046 83.8094 89.907 83.9421 89.3752 83.9421C88.7104 84.0751 88.1784 84.0752 87.7795 84.0752C87.2478 84.0752 86.9823 83.8092 86.8493 83.2774C86.7164 82.8786 86.5829 82.347 89.6407 79.821C91.236 78.4915 92.9646 77.2949 93.8952 76.7631" stroke="white" stroke-width="3" stroke-linecap="round"/>
            <path d="M14.8672 131.827C16.2912 131.115 18.7833 129.335 19.1394 127.792C19.4596 126.404 15.9059 128.557 15.4605 128.029C14.6966 127.124 18.19 125.062 20.8008 123.52" stroke="white" stroke-width="3" stroke-linecap="round"/>
            <path d="M45.0098 131.827C46.4338 131.115 48.9259 129.335 49.2819 127.792C49.6022 126.404 46.0485 128.557 45.6031 128.029C44.8392 127.124 48.3326 125.062 50.9433 123.52" stroke="white" stroke-width="3" stroke-linecap="round"/>
            <path d="M125.137 92.1843C126.998 90.456 129.258 87.6641 130.189 86.2017C129.923 86.2017 129.79 86.3348 129.524 86.3348C127.929 86.7336 126.865 86.9995 126.334 86.3348C126.201 86.2018 125.935 85.8031 126.201 85.1384C126.865 83.6759 130.588 79.9534 134.31 77.4274" stroke="white" stroke-width="3" stroke-linecap="round"/>
            </svg>

                <p class="p-end">вы ответили на ${score}/${quizData.length} вопросов правильно</p>

                <button class="button-end" onclick="location.reload()">перепройти</button>
            `
        }
    }
})